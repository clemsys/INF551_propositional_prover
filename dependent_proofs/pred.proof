define pred = fun (x : Nat) -> (Ind (fun (n : Nat) -> Nat) Z (fun (n : Nat) -> fun (m : Nat) -> n) x)
eval pred Z
eval pred (S (S (S Z)))
define sum = fun (x : Nat) -> (Ind (fun (n : Nat) -> (Nat => Nat)) (fun (n : Nat) -> n) (fun (n : Nat) -> fun (f : Nat => Nat) -> (fun : (m : Nat) -> (S (f m)))) x)
